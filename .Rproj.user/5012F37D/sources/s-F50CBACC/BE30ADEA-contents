# Feb. 6, 2018

# Dane Van Domelen
# R code for Seeking Alpha article

# "How XIV Died


# Clear workspace, set working directory, and load packages
rm(list = ls())
#install.packages("stocks", repos = "http://R-Forge.R-project.org")
#install.packages("dvmisc", repos = "http://R-Forge.R-project.org")
library("stocks")
library("dvmisc")
setwd("C:/Users/Dane/Google Drive/Documents/Stocks/seekingalpha/xiv_dead")

# Load data for SPY, VIX, XIV, and UPRO over XIV's lifetime
prices <- load.prices(tickers = c("SPY", "^VIX", "XIV", "UPRO"), to = "2018-02-05")
apply(prices, 2, prices.rate)
apply(prices, 2, function(x) prices.rate(prices = x, units.rate = 252))
apply(prices, 2, mdd)
apply(prices, 2, sharpe.ratio)

# Figure 1. Growth of $10,000 in SPY, UPRO, and XIV over XIV's lifetime.
prices <- load.prices(tickers = c("SPY", "^VIX", "XIV", "ZIV", "UPRO"))
prices[nrow(prices), 3] <- 15.43
tail(prices)
png(filename = "figure1.png", units = "in", width = 5.5, height = 4.5, res = 500)
figure1 <- growth.graph(prices = prices[, c("SPY", "UPRO", "XIV")],
                        initial = 10000,
                        plot.list = list(main = "Growth of $10k over XIV's Lifetime"))
dev.off()

# Table 1. Performance metrics over XIV's lifetime.
metrics(prices = prices[-nrow(prices), ])

# Figure 2. Daily gains for XIV vs. SPY (left) and XIV vs. VIX (right).
gains <- apply(prices, 2, pchanges)
rownames(gains) <- rownames(prices)[-1]
colnames(gains)[2] <- "VIX"
png(filename = "figure2.png", units = "in", width = 8.5, height = 4.5, res = 500)
par(mfrow = c(1, 2))
figure2a <- gains.graph(gains = gains[-nrow(gains), c(1, 3)] * 100,
                        include.legend = FALSE,
                        plot.list = list(main = "XIV vs. SPY",
                                         xlim = c(-7, 5), ylim = c(-90, 20)),
                        points.list = list(cex = 0.4))
points(x = gains[nrow(gains), 1] * 100, y = gains[nrow(gains), 3] * 100,
       type = "p", pch = 16, col = "red", cex = 0.6)
figure2b <- gains.graph(gains = gains[-nrow(gains), c(2, 3)] * 100,
                        include.legend = FALSE,
                        plot.list = list(main = "VIX vs. SPY",
                                         xlim = c(-30, 120), ylim = c(-90, 20)),
                        points.list = list(cex = 0.4))
points(x = gains[nrow(gains), 2] * 100, y = gains[nrow(gains), 3] * 100,
       type = "p", pch = 16, col = "red", cex = 0.6)
dev.off()

# Histogram of VIX daily changes
vix.history <- load.gains(tickers = "^VIX")
hist(vix.history, breaks = 100)
sort(vix.history, decreasing = TRUE)[1: 10]

# Figure 3. Histogram of VIX daily gains from Jan. 3, 1990, to Feb 5, 2018.
png(filename = "figure3.png", units = "in", width = 5.5, height = 4.5, res = 500)
par(mfrow = c(1, 1))
hist(vix.history * 100, breaks = 50,
     main = "Histogram of VIX Daily Gains",
     xlab = "Daily gain (%)")
dev.off()

# Extra
fit <- lm(gains[, 4] ~ gains[, 1])
summary(fit)
tail(prices)
74.54/85.41 - 1
65.66/74.54 - 1

plot(gains[, 3], gains[, 4])
plot(gains[-nrow(gains), 3], gains[-nrow(gains), 4])
gains0 <- gains[-nrow(gains), 1]
gains1 <- gains[-nrow(gains), 3]
gains2 <- gains[-nrow(gains), 4]
plot(gains1, gains2)
cor(gains1, gains2)
cor(gains1, gains2, method = "spearman")
cor(gains1, gains2)

summary(lm(gains1 ~ gains0))
summary(lm(gains2 ~ gains0))

mgains <- load.gains(tickers = c("VFINX", "^VIX", "XIV", "ZIV"),
                     time.scale = "monthly")
head(mgains)
plot(mgains[, 3], mgains[, 4])
cor(mgains[, 3], mgains[, 4])
cor(mgains)

hist(gains[, 3], breaks = 100)

sort(vix.history, decreasing = TRUE)[1: 10]


# Post-publication
gains <- load.gains(tickers = c("SPY", "^VIX", "XIV", "ZIV", "UPRO"))
fit <- lm(gains[, 4] ~ gains[, 2])
plot(gains[, 2], gains[, 4])
(-0.8 - fit$coef[1]) / fit$coef[2]

fit <- lm(gains[1: 1806, 4] ~ gains[1: 1806, 2])
summary(fit)
(-0.8 - fit$coef[1]) / fit$coef[2]

gains.feb4 <- gains[1: 1806, ]
summary(lm(gains.feb4[, 3] ~ gains.feb4[, 1]))
summary(lm(gains.feb4[, 4] ~ gains.feb4[, 1]))

summary(lm(gains.feb4[, 3] ~ gains.feb4[, 2]))
summary(lm(gains.feb4[, 4] ~ gains.feb4[, 2]))

# varan
gains <- load.gains(tickers = c("QLD", "VXX", "XIV"), time.scale = "monthly")
tail(gains)

gains <- load.gains(tickers = c("QLD", "VXX", "XIV"), to = "2018-02-05")
gains2 <- gains %*% c(0.5, 0, 0.5)
gains.rate(gains2, units.rate = 252)

gains <- load.gains(tickers = c("XIV", "SVXY"))
plot(gains[, 1], gains[, 2])
points(c(-1, 1), c(-1, 1), type = "l")

# itscalledcommonsense
gains <- load.gains(tickers = c("SPY", "^VIX", "ZIV", "XIV"))
gains2 <- gains[1: 1806, ]
summary(lm(gains2[, 4] ~ gains2[, 1]))
summary(lm(gains2[, 4] ~ poly(gains2[, 1], 2, raw = TRUE)))
summary(lm(gains2[, 4] ~ poly(gains2[, 1], 3, raw = TRUE)))
plot(gains2[, 1], gains2[, 4])

fit <- lm(lm(gains2[, 4] ~ poly(gains2[, 1], 3, raw = TRUE)))
xvals <- seq(-0.08, 0.08, 0.001)
yvals <- fit$coef[1] + fit$coef[2] * xvals + fit$coef[3] * xvals^2 + fit$coef[4] * xvals^3
points(xvals, yvals, type = "l", col = "blue")

# PCM I think...
summary(lm(gains2[, 4] ~ gains2[, 1] + gains2[, 2]))
summary(lm(gains2[, 4] ~ gains2[, 1] + gains2[, 2] + gains2[, 1] * gains2[, 2]))

n.quantiles <- 25
vix.quantiles <- quant_groups(x = gains2[, 2], groups = n.quantiles, labels = FALSE)
summary(lm(gains2[, 4] ~ gains2[, 1] + vix.quantiles + gains2[, 1] * as.factor(vix.quantiles)))

# Create figure of XIV vs. SPY color-coded by VIX decile
plot(gains2[, 1], gains2[, 4],
     col = vix.quantiles)
gains.df <- as.data.frame(gains2)
gains.df$vixq <- vix.quantiles

ab <- matrix(NA, ncol = 3, nrow = n.quantiles)
for (ii in 1: n.quantiles) {
  fit <- lm(XIV ~ SPY, data = subset(gains.df, vixq == ii))
  ab[ii, ] <- c(ii, fit$coef)
}
ab

# Would be interesting if spot VIX affected XIV vs. SPY beta...
dat <- load.gains(tickers = c("SPY", "^VIX", "XIV"), to = "2018-02-05")
vix.prices <- load.prices(tickers = "^VIX", from = "2010-11-30", to = "2018-02-02")
dim(dat)
length(vix.prices)
dat <- as.data.frame(dat)
dat$spotvix <- vix.prices
names(dat)[2] <- "VIX"

summary(lm(XIV ~ SPY + VIX + spotvix, data = dat))
summary(lm(XIV ~ SPY + VIX + spotvix + SPY * VIX + SPY * spotvix + VIX * spotvix, data = dat))

dat$spotvixq <- quant_groups(x = dat$spotvix, groups = 10, labels = FALSE)
ab <- matrix(NA, ncol = 3, nrow = 10)
for (ii in 1: 10) {
  fit <- lm(XIV ~ SPY, data = subset(dat, spotvixq == ii))
  ab[ii, ] <- c(ii, fit$coef)
}
ab
plot(ab[, 2])
plot(ab[, 3])

# Do this for contango!!! Plot alphas and betas across deciles of initial contango. Maybe
# with just SPY, or both SPY and VIX.

# Exploratory work for future article
gains <- load.gains(tickers = c("SPY", "^VIX", "ZIV", "XIV"))
gains2 <- gains[1: 1806, ]

# Look at XIV vs. same-day SPY, VIX, and previous-day VIX
summary(lm(gains2[-1, 3] ~ gains2[-1, 1] + gains2[-1, 2] + gains2[-nrow(gains2), 2]))
summary(lm(gains2[-1, 3] ~ gains2[-1, 1] + gains2[-1, 2]))

prices <- apply(gains, 2, function(x) balances(ratios = x + 1))
rownames(prices)[1] <- "2010-11-30"
par(mfrow = c(2, 1))
fig1a <- growth.graph(prices = prices)
fig1b <- growth.graph(tickers = "^VIX", from = "2010-11-30", to = "2018-02-05")


gains <- load.gains(tickers = c("SPY", "^VIX", "XIV"), to = "2018-02-06")
gains[nrow(gains), 3] <- 15.43 / 115.55 - 1
tail(gains)
fig1 <- growth.graph(gains)

prices <- apply(gains, 2, function(x) balances())
fig1 <- growth.graph()



# Plot SPY, VIX, XIV, and ZIV
fig1 <- growth.graph(tickers = c("SPY", "^VIX", "XIV", "ZIV"))

# Plot ZIV vs. XIV
fig2 <- gains.graph(tickers = c("XIV", "ZIV"))
fig3 <- gains.graph(tickers = c("^VIX", "XIV", "ZIV"))

fig4 <- onemetric.overtime.graph(tickers = c("^VIX", "XIV"), y.metric = "beta")

# Model for XIV vs. SPY and ^VIX using data for past 100 days
gains <- load.gains(tickers = c("SPY", "^VIX", "XIV"), to = "2018-02-05")
fit <- lm(gains[, 3] ~ gains[, 1] + gains[, 2])
summary(fit)
fit$coef[1] + fit$coef[2] * (-0.042) + fit$coef[3] * 1.156
fit$coef[1] + fit$coef[2] * (-0.052) + fit$coef[3] * 1.73

fit <- lm(gains[, 3] ~ poly(gains[, 1], 3, raw = TRUE) + poly(gains[, 2], 1, raw = TRUE))
summary(fit)
fit$coef[1] + fit$coef[2] * (-0.042) + fit$coef[3] * (-0.042)^2 + fit$coef[4] * (-0.042)^3 +
  fit$coef[5] * 1.156

fit <- lm(gains[, 3] ~ gains[, 1] + gains[, 2] + gains[, 1] * gains[, 2])
summary(fit)


fit <- lm(gains[, 3] ~ gains[, 2])
summary(fit)
plot(gains[, 2], gains[, 3])

# Prediction intervals!!!


# Look at UPRO and XIV performance since Chris DeMuth Jr.'s article
gains <- load.gains(tickers = c("SPY", "UPRO", "XIV"), from = "2015-06-08")
apply(gains, 2, gains.rate)
apply(gains, 2, sharpe.ratio)
gains.rate(gains = gains[, 1] * 4)

# Metrics since XIV's inception
gains <- load.gains(tickers = c("SPY", "^VIX", "UPRO", "XIV"))
apply(gains, 2, sharpe.ratio)

# Figure 1. XIV's 50-day alpha and beta over time.
png(filename = "figure1.png", units = "in", width = 8, height = 8.5, res = 500)
par(mfrow = c(2, 1))
gains <- load.gains(tickers = c("SPY", "XIV"))
fig1a <- onemetric.overtime.graph(gains = gains,
                                  y.metric = "alpha",
                                  plot.list = list(main = "XIV's 50-day Alpha Over Time"))
fig1b <- onemetric.overtime.graph(gains = gains,
                                 y.metric = "beta",
                                 plot.list = list(main = "XIV's 50-day Beta Over Time",
                                                  ylim = c(-1, 8.5)))
dev.off()

median(fig1a/100)
convert.rate(median(fig1a/100), 1, 252)
table(fig1a > 0)
mean(fig1a > 0)
length(fig1a)

median(fig1b)
range(fig1b)
tail(fig1b, 22)

# XIV's alpha and beta for last 50 gains
gains <- load.gains(tickers = c("SPY", "XIV", "UPRO"), preto.days = 49)
plot(gains[, 1], gains[, 2])
summary(lm(gains[, 2] ~ gains[, 1]))
summary(lm(gains[, 3] ~ gains[, 1]))

# Recreate graph but color-code alpha and beta based on positive or negative contango
setwd("C:/Users/Dane/Google Drive/Documents/Stocks/seekingalpha/contango_10_21_17")
dat <- read.csv("contango_data_10_21_17.csv")
names(dat)[7] <- "Weighted.VIX.futures"
dat <- dat[!is.na(dat[, "XIV.market"]),
           c("Date", "X1st.mth", "X2nd.mth", "X.Contr.1m", "X.Contr.2m",
             "Tot.contracts", "Weighted.VIX.futures", "Cont.Backw", "VIX",
             "VXX.market", "XIV.market", "UVXY.market")]
dat$Date <- as.Date(dat$Date, format = "%A, %B %d, %Y")
dat <- subset(dat, Date >= "2010-11-30")

# Calculate various measures of contango, and add to dat
dat$c.spotm1 <- dat[, "X1st.mth"] - dat[, "VIX"]
dat$c.spotm1.p <- (dat[, "X1st.mth"] / dat[, "VIX"] - 1) * 100

dat$c.spotm2 <- dat[, "X2nd.mth"] - dat[, "VIX"]
dat$c.spotm2.p <- (dat[, "X2nd.mth"] / dat[, "VIX"] - 1) * 100

dat$c.m1m2 <- dat[, "X2nd.mth"] - dat[, "X1st.mth"]
dat$c.m1m2.p <- (dat[, "X2nd.mth"] / dat[, "X1st.mth"] - 1) * 100

dat$c.w.m1m2 <- dat[, "X2nd.mth"] * dat[, "X.Contr.2m"] - dat[, "X1st.mth"] * dat[, "X.Contr.1m"]
dat$c.w.m1m2.p <- ((dat[, "X2nd.mth"] * dat[, "X.Contr.2m"]) / (dat[, "X1st.mth"] * dat[, "X.Contr.1m"]) - 1) * 100
dat$c.w.spotw <- dat[, "Weighted.VIX.futures"] - dat[, "VIX"]
dat$c.w.spotw.p <- (dat[, "Weighted.VIX.futures"] / dat[, "VIX"] - 1) * 100

dat <- dat[-nrow(dat), ]

gains <- load.gains(tickers = c("SPY", "XIV"))

b.contango <- c()
b.vix <- c()
alphas <- c()
betas <- c()
means <- c()
sds <- c()
sharpes <- c()
for (ii in 1: (nrow(gains) - 49)) {
  cgains <- gains[ii: (ii + 49), ]
  b.contango[ii] <- dat$c.m1m2.p[ii]
  b.vix[ii] <- dat$VIX[ii]
  fit <- lm(cgains[, 2] ~ poly(cgains[, 1], 1, raw = TRUE))
  alphas[ii] <- fit$coef[1]
  betas[ii] <- fit$coef[2]
  means[ii] <- mean(cgains[, 2])
  sds[ii] <- sd(cgains[, 2])
  sharpes[ii] <- sharpe.ratio(gains = cgains[, 2])
}

plot(b.vix, alphas)
groups <- quant.groups(x = b.vix, groups = 10)
means.graph(y = alphas, group = groups)

plot(b.vix, betas)
means.graph(y = betas, group = groups)
fit <- lm(betas ~ b.vix)
abline(fit)
fit <- lm(betas ~ poly(b.vix, 2, raw = TRUE))
summary(fit)
xvals <- seq(min(b.vix), max(b.vix), 0.1)
yvals <- predict(fit, newdata = data.frame(b.vix = xvals))
points(xvals, yvals, type = "l", col = "blue")

# Fit XIV vs. SPY and VIX for last 50 days
gains <- load.gains(tickers = c("SPY", "^VIX", "XIV"), preto.days = 99)
gains.spy <- gains[, 1]
gains.vix <- gains[, 2]
gains.xiv <- gains[, 3]
fit1 <- lm(gains.vix ~ gains.spy)
fit2 <- lm(gains.xiv ~ gains.spy + gains.vix)
summary(fit2)
hist(fit$residuals)
histo(fit$residuals, dis = "norm")

xvals <- seq(-0.2, 0.2, 0.001)
e_vix <- predict(fit1, newdata = data.frame(gains.spy = xvals))
e_xiv <- predict(fit2, newdata = data.frame(gains.spy = xvals, gains.vix = e_vix))
cbind(xvals, e_vix, e_xiv)

gains <- load.gains(tickers = c("^GSPC", "^VIX"))
plot(gains[, 1], gains[, 2])

plot(xvals, e_xiv)

xvals[which(e_xiv <= -0.8)[1]]

which(e_xiv >= 0.8)[1]
xvals[258]
e_vix[258]

cbind(xvals, e_xiv)

fit.vix_spy <- lm(gains[, 2] ~ gains[, 1])
fit.xiv_spy.vix <- lm(gains[, 3] ~ gains[, 1] + gains[, 2])
summary(fit.vix_spy)
fit.vix_spy$coef[1] + fit.vix_spy$coef[2] * (-0.1)
fit.xiv_spy.vix$coef[1] + fit.xiv_spy.vix$coef[2] * (-0.1) + fit.xiv_spy.vix$coef[3] * 1.57

# Look at MDD for hypothetical 8x ETF over past year
gains <- load.gains("SPY", from = "2012-10-20")
mdd(gains = gains)
mdd(gains = gains * 8)
gains.rate(gains)
gains.rate(gains * 8)


fit <- lm(betas ~ poly(b.vix, 7, raw = TRUE))
summary(fit)
xvals <- seq(min(b.vix), max(b.vix), 0.1)
yvals <- predict(fit, newdata = data.frame(b.vix = xvals))
points(xvals, yvals, type = "l", col = "blue")

plot(b.vix, log(betas))
plot(log(b.vix), betas)
plot(b.vix, sqrt(betas))
plot(sqrt(b.vix), sqrt(betas))
summary(lm(sqrt(betas) ~ sqrt(b.vix)))

plot(alphas, col = ifelse(b.contango <= 0, "red", "blue"))
tapply(alphas, b.contango > 0, mean)
convert.rate(-1.86649e-3, 1, 252)
convert.rate(8.953e-5, 1, 252)
plot(b.contango, alphas)

plot(sharpes, col = ifelse(b.contango <= 0, "red", "blue"))
tapply(sharpes, b.contango > 0, mean)

groups <- interval.groups(x = b.contango, groups = 8)
groups <- quant.groups(x = b.contango, groups = 15)
table(groups)
means.graph(y = alphas, group = groups)
abline(h = 0)

means.graph(y = means, group = groups)
abline(h = 0)

means.graph(y = sharpes, group = groups)
abline(h = 0)

plot(b.contango, betas)
fit <- lm(betas ~ b.contango)
summary(fit)
means.graph(y = betas, group = groups)

# XIV vs. ^VIX
plot(gains[, 2], gains[, 4], ylim = c(-1, 0.15), xlim = c(-0.3, 2.2))
fit <- lm(gains[, 4] ~ gains[, 2])
summary(fit)
-100 / fit$coef[2]
(-1 - fit$coef[1]) / fit$coef[2]

# XIV vs. SPY
plot(gains[, 1], gains[, 4], ylim = c(-1, 0.15), xlim = c(-0.3, 0.05))

# XIV vs. both
fit <- lm(gains[, 4] ~ gains[, 1] + gains[, 2])
summary(fit)
fit$coef[1] + fit$coef[2] * (-0.4) + fit$coef[3] * (0.7)

# Look at just last 100 days
gains <- load.gains(tickers = c("SPY", "^VIX", "UPRO", "XIV"), preto.days = 99)
dim(gains)
plot(gains[, 2], gains[, 4], ylim = c(-1, 0.15), xlim = c(-0.3, 2.2))
fit <- lm(gains[, 4] ~ gains[, 2])
summary(fit)
-100 / fit$coef[2]
(-1 - fit$coef[1]) / fit$coef[2]

plot(gains[, 1], gains[, 4], ylim = c(-1, 0.15), xlim = c(-0.3, 0.05))

fit <- lm(gains[, 4] ~ gains[, 1] + gains[, 2])
summary(fit)
fit$coef[1] + fit$coef[2] * (-0.125) + fit$coef[3] * (0.013803 - 15.58955 * (-0.125))



# Load data for SPY, VIX, XIV, and VXX
gains <- load.gains(tickers = c("SPY", "^VIX", "XIV", "VXX"))

# Plot XIV's 50-day beta over time
beta1 <- c()
beta2 <- c()
beta3 <- c()
beta4 <- c()
window.size <- 50
for (ii in 1: (nrow(gains) - window.size + 1)) {
  gains.c <- gains[ii: (ii + window.size - 1), ]
  fit1 <- lm(gains.c[, 3] ~ gains.c[, 1])
  fit2 <- lm(gains.c[, 3] ~ gains.c[, 2])
  fit3 <- lm(gains.c[, 3] ~ gains.c[, 1] + gains.c[, 2])
  beta1[ii] <- fit1$coef[2]
  beta2[ii] <- fit2$coef[2]
  beta3[ii] <- fit3$coef[2]
  beta4[ii] <- fit3$coef[3]
}

# Regressing on SPY
plot(beta1)
plot(beta2)
plot(beta3)
plot(beta4)

# Regressing on VIX


# Regressing on both



# Figure 1: XIV's 50-day beta over time.
gains <- load.gains(tickers = c("SPY", "^VIX", "XIV", "VXX"))
par(mfrow = c(2, 1))
fig1 <- onemetric.overtime.graph(gains = gains[, c(1, 3)],
                                 y.metric = "beta")
tail(fig1)

fig2 <- onemetric.overtime.graph(gains = gains[, c(2, 3)],
                                 y.metric = "beta")

plot(fig1, fig2)

gains3 <- load.gains(tickers = c("^GSPC", "^VIX"))
fig3 <- onemetric.overtime.graph(gains = gains3,
                                 y.metric = "pearson",
                                 window.units = 100)

gains2 <- load.gains(tickers = c("SPY", "^VIX", "XIV", "VXX"),
                     to = Sys.Date(), preto.days = 49)
fit <- lm(gains2[, 3] ~ gains2[, 1] + gains2[, 2])
summary(fit)
fit$coef[1] + fit$coef[2] * (-0.3) + fit$coef[3] * (0.4)

# Also want to look at beta controlling for VIX over time... and look at contango over time...

setwd("C:/Users/Dane/Google Drive/Documents/Stocks/seekingalpha/contango_10_21_17")
start.date <- as.Date("2016-07-15")
start.date <- as.Date("2010-11-30")

# Note: Downloaded data using first link here: http://investing.kuchita.com/2012/06/28/xiv-data-and-pricing-model-since-vix-futures-available-2004/

# Then, opened in Excel, removed rows with future dates (after 5/11/17), changed VXX Calc column to
# numeric with 2 decimals, and saved as Excel and CSV.

# Load contango spreadsheet
dat <- read.csv("contango_data_10_21_17.csv")
names(dat)[7] <- "Weighted.VIX.futures"
dat <- dat[!is.na(dat[, "XIV.market"]),
           c("Date", "X1st.mth", "X2nd.mth", "X.Contr.1m", "X.Contr.2m",
             "Tot.contracts", "Weighted.VIX.futures", "Cont.Backw", "VIX",
             "VXX.market", "XIV.market", "UVXY.market")]
dat$Date <- as.Date(dat$Date, format = "%A, %B %d, %Y")
dat <- subset(dat, Date >= start.date)

# Calculate various measures of contango, and add to dat
dat$c.spotm1 <- dat[, "X1st.mth"] - dat[, "VIX"]
dat$c.spotm1.p <- (dat[, "X1st.mth"] / dat[, "VIX"] - 1) * 100

dat$c.spotm2 <- dat[, "X2nd.mth"] - dat[, "VIX"]
dat$c.spotm2.p <- (dat[, "X2nd.mth"] / dat[, "VIX"] - 1) * 100

dat$c.m1m2 <- dat[, "X2nd.mth"] - dat[, "X1st.mth"]
dat$c.m1m2.p <- (dat[, "X2nd.mth"] / dat[, "X1st.mth"] - 1) * 100

dat$c.w.m1m2 <- dat[, "X2nd.mth"] * dat[, "X.Contr.2m"] - dat[, "X1st.mth"] * dat[, "X.Contr.1m"]
dat$c.w.m1m2.p <- ((dat[, "X2nd.mth"] * dat[, "X.Contr.2m"]) / (dat[, "X1st.mth"] * dat[, "X.Contr.1m"]) - 1) * 100
dat$c.w.spotw <- dat[, "Weighted.VIX.futures"] - dat[, "VIX"]
dat$c.w.spotw.p <- (dat[, "Weighted.VIX.futures"] / dat[, "VIX"] - 1) * 100

# Calculate gains for XIV, UVXY, VXX, VIX, and SPY (have to download SPY)
vix.gains <- pchanges(dat$VIX)
xiv.gains <- pchanges(dat$XIV.market)
uvxy.gains <- pchanges(dat$UVXY.market)
vxx.gains <- pchanges(dat$VXX.market)
spy.gains <- load.gains("SPY", from = start.date)
#xivh.gains <- load.gains("XIVH", from = start.date)
dat <- dat[-nrow(dat), ]

# See which contango is most predictive for XIV
summary(lm(xiv.gains ~ spy.gains + vix.gains))

summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.spotm1))
summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.spotm1.p))

summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.spotm2))
summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.spotm2.p))

summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.m1m2))
summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.m1m2.p))

summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.w.m1m2))
summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.w.m1m2.p))

summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.w.spotw))
summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.w.spotw.p))

summary(lm(xiv.gains ~ spy.gains + vix.gains + dat$c.spotm1.p + dat$c.spotm2.p +
             dat$c.m1m2.p + dat$c.w.spotw.p))

# See which contango is most predictive for VXX
summary(lm(vxx.gains ~ spy.gains + vix.gains))

summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.spotm1))
summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.spotm1.p))

summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.spotm2))
summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.spotm2.p))

summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.m1m2))
summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.m1m2.p))

summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.w.m1m2))
summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.w.m1m2.p))

summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.w.spotw))
summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.w.spotw.p))

summary(lm(vxx.gains ~ spy.gains + vix.gains + dat$c.spotm1.p + dat$c.spotm2.p +
             dat$c.m1m2.p + dat$c.w.spotw.p))

# See which contango is most predictive for XIVH
summary(lm(xivh.gains ~ spy.gains + vix.gains))

summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.spotm1))
summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.spotm1.p))

summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.spotm2))
summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.spotm2.p))

summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.m1m2))
summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.m1m2.p))

summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.w.m1m2))
summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.w.m1m2.p))

summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.w.spotw))
summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.w.spotw.p))

summary(lm(xivh.gains ~ spy.gains + vix.gains + dat$c.spotm1.p + dat$c.spotm2.p +
             dat$c.m1m2.p + dat$c.w.spotw.p))

plot(spy.gains, xivh.gains)
plot(vix.gains, xivh.gains)

#


# Fit model for VXX vs. SPY, VIX, and contango
dat <- dat[-nrow(dat), ]
fit <- lm(vxx.gains ~ spy.gains + vix.gains + dat$c.m1m2.p)
summary(fit)
mean(dat$c.m1m2.p)
fit$coef
fit$coef[1] + fit$coef[4] * mean(dat$c.m1m2.p)
convert.rate(-0.002534108, 1, 252)

summary(lm(vxx.gains ~ spy.gains + poly(vix.gains, 1, raw = TRUE) + dat$c.m1m2.p))
summary(lm(vxx.gains ~ spy.gains + poly(vix.gains, 2, raw = TRUE) + dat$c.m1m2.p))
summary(lm(vxx.gains ~ spy.gains + poly(vix.gains, 3, raw = TRUE) + dat$c.m1m2.p))
#summary(lm(vxx.gains ~ spy.gains + poly(vix.gains, 4, raw = TRUE) + dat$c.m1m2.p))

fit <- lm(vxx.gains ~ spy.gains + vix.gains + dat$c.m1m2.p)
xvals <- seq(min(dat$c.m1m2.p), max(dat$c.m1m2.p), 0.1)
yvals <- fit$coef[1] + fit$coef[4] * xvals
plot(xvals, yvals)
abline(h = 0)

fit <- lm(uvxy.gains ~ spy.gains + vix.gains + dat$c.m1m2.p)
xvals <- seq(min(dat$c.m1m2.p), max(dat$c.m1m2.p), 0.1)
yvals <- fit$coef[1] + fit$coef[4] * xvals
plot(xvals, yvals)
abline(h = 0)



# Plot intercept over time



summary(lm(uvxy.gains ~ spy.gains + vix.gains + dat$c.m1m2.p))

summary(lm(uvxy.gains ~ spy.gains + vix.gains))
convert.rate(-0.0059, 1, 252)
summary(lm(uvxy.gains ~ spy.gains + vix.gains + dat$c.m1m2.p))

convert.rate(0.0022445, 1, 252)

mean(uvxy.gains)
summary(lm(uvxy.gains ~ dat$c.m1m2.p))
convert.rate(-6.329e-3, 1, 252)


gains <- load.gains(tickers = c("SPY", "^VIX", "XIV"), from = "2010-11-30", to = "2017-05-13")
dim(gains)
dim(dat)

# Remove 6/29/16 data point in dat
loc <- which(dat$Date == "2016-06-29")
dat <- dat[-loc, ]

# Model VXX vs.

# # Split into data from previous SA article (11/30/2010 - 3/18/2016) and data since
# # then (3/21/16-5/11/17)
# locs1 <- which(dat$Date <= as.Date("2016-03-18"))
# locs2 <- which(dat$Date > as.Date("2016-03-18"))
# dat1 <- dat[locs1, ]
# dat2 <- dat[locs2, ]

# Load historical prices for SPY, VIX, and XIV, and add to dat
prices <- load.prices(tickers = c("SPY", "^VIX", "XIV"), from = "2010-11-30", to = "2017-05-12")
dim(prices)
dim(dat)
all(as.Date(rownames(prices)) == dat$Date)
dat <- cbind(dat, prices)

# In 252-day moving average, look at adjusted association between contango and 10-day change in XIV,
# controlling for 10-day change in SPY and VIX.
moving.window <- 252
contango.window <- 10
results <- matrix(NA, ncol = 9, nrow = nrow(dat) - moving.window + 1)
for (ii in 1: (nrow(dat) - moving.window + 1)) {

  # Loop through and get baseline contango and 10-day change in SPY, VIX, and XIV
  dat.subset <- dat[ii: (ii + moving.window - 1), ]
  mat <- matrix(NA, ncol = 4, nrow = moving.window - contango.window)
  for (jj in 1: (nrow(dat.subset) - contango.window)) {

    mat[jj, ] <- c(dat.subset[jj, "c.m1m2.p"],
                   as.numeric(dat.subset[(jj + contango.window), c("SPY", "^VIX", "XIV")] / dat.subset[jj, c("SPY", "^VIX", "XIV")] - 1))

  }

  # fit1 <- lm(mat[, 4] ~ mat[, 2] + mat[, 3])
  # fit2 <- lm(mat[, 4] ~ mat[, 2] + mat[, 3] + mat[, 1])
  # results[ii, ] <- c(summary(fit2)$coef[4, c(1, 4)], summary(fit2)$r.squared - summary(fit1)$r.squared)

  fit0 <- lm(mat[, 4] ~ mat[, 1])
  fit1 <- lm(mat[, 4] ~ mat[, 2])
  fit2 <- lm(mat[, 4] ~ mat[, 2] + mat[, 1])
  results[ii, ] <- c(summary(fit0)$coef[2, c(1, 4)],
                     summary(fit2)$coef[3, c(1, 4)],
                     summary(fit2)$r.squared - summary(fit1)$r.squared,
                     tapply(mat[, 4], mat[, 1] > 0, mean),
                     tapply(mat[, 4] - mat[, 2] * fit2$coef[2], mat[, 1] > 0, mean))

}
colnames(results) <- c("contango.beta", "contango.p",
                       "contango.adj.beta", "contango.adj.p",
                       "r2.change",
                       "mean.xiv.neg", "mean.xiv.pos",
                       "mean.betamatched.neg", "mean.betamatched.pos")

# Surprisingly, contango inversely associated with 10-day XIV growth the majority of the time.
# Maybe because high contango means volatility is down, which makes an increase in volatility more likely?
# Could test... Does contango go up as VIX goes down?
plot(results[, "contango.beta"])
mean(results[, "contango.beta"] > 0)

plot(dat[, "^VIX"], dat[, "c.m1m2.p"])
vix1 <- pchanges(dat[-nrow(dat), "^VIX"])
vix2 <- pchanges(dat[-1, "^VIX"])
plot(vix1, vix2)
summary(lm(vix2 ~ vix1))


plot(results[, "contango.p"])
plot(results[, "contango.beta"] > 0 & results[, "contango.p"] < 0.1)

plot(results[, "r2.change"], ylim = c(0, 0.3))
mean(results[, "r2.change"] > 0.01)

abline(h = 0)
abline(h = 0.01)

plot(results[, "mean.xiv.neg"], type = "l", col = "red")
points(results[, "mean.xiv.pos"], type = "l", col = "green")
mean(results[, "mean.xiv.pos"] > results[, "mean.xiv.neg"])

plot(results[, "mean.betamatched.neg"], type = "l", col = "red")
points(results[, "mean.betamatched.pos"], type = "l", col = "green")
mean(results[, "mean.betamatched.pos"] > 0)
mean(results[, "mean.betamatched.neg"] > 0)



contango <- dat[-nrow(dat), "c.m1m2.p"]
xiv.gains <- pchanges(dat[, "XIV"])
plot(contango, xiv.gains)
summary(lm(xiv.gains ~ contango))
tapply(xiv.gains, contango > 0, mean)

range(contango)
cutpoints <- seq(-20, 30, 0.25)
means <- matrix(NA, ncol = 2, nrow = length(cutpoints))
for (ii in 1: length(cutpoints)) {
  means[ii, ] <- tapply(xiv.gains, contango > cutpoints[ii], mean)
}
plot(cutpoints, means[, 1], type = "l", col = "red", ylim = c(-0.075, 0.075))
points(cutpoints, means[, 2], type = "l", col = "green")
abline(h = 0)


gains <- apply(prices, 2, pchanges)
xiv.beta <- lm(gains[, 3] ~ gains[, 1])$coef[2]

contango <- dat[-nrow(dat), "c.m1m2.p"]
xiv.norm.gains <- gains[, 3] - gains[, 1] * xiv.beta
plot(contango, xiv.norm.gains)
summary(lm(xiv.norm.gains ~ contango))
tapply(xiv.norm.gains, contango > 0, mean)

range(contango)
cutpoints <- seq(-20, 30, 0.25)
means <- matrix(NA, ncol = 2, nrow = length(cutpoints))
for (ii in 1: length(cutpoints)) {
  means[ii, ] <- tapply(xiv.norm.gains, contango > cutpoints[ii], mean)
}
plot(cutpoints, means[, 1], type = "l", col = "red", ylim = c(-0.075, 0.075))
points(cutpoints, means[, 2], type = "l", col = "green")
abline(h = 0)

plot(cutpoints, convert.rate(means[, 1], 1, 252), type = "l", col = "red", ylim = c(-1, 20))
points(cutpoints, convert.rate(means[, 2], 1, 252), type = "l", col = "green")
abline(h = 1)




# Just look at contango values for which XIV is profitable and for which VXX is profitable
gains <- load.gains(tickers = c("SPY", "^VIX", "XIV", "VXX"), from = "2010-11-30", to = "2017-05-12")
prices <- load.prices(tickers = c("SPY", "^VIX", "XIV", "VXX"), from = "2010-11-30", to = "2017-05-11")
dim(dat)
dim(gains)
plot(dat[, "VIX"], prices[, "^VIX"])
plot(dat[, "XIV.calc"], prices[, "XIV"])

fit <- lm(gains[, "XIV"] ~ dat[, "c.m1m2.p"])
summary(fit)
polyroot(fit$coef)
means.graph(gains[, "XIV"], quant.groups(dat[, "c.m1m2.p"], 4))


fit <- lm(gains[, "VXX"] ~ dat[, "c.m1m2.p"])
polyroot(fit$coef)
summary(lm(gains[, "VXX"] ~ dat[, "c.m1m2.p"]))


# Add fund gains to dat
dat <- cbind(dat, gains)
dim(dat)

plot(dat$c.m1m2.p, dat$XIV)
summary(lm(XIV ~ c.m1m2.p, data = dat))
summary(lm(XIV ~ ))

# Load historical prices for various funds
start.date <- "2010-11-30"
end.date <- "2017-05-11"
spy <- as.matrix(getSymbols("SPY", from = start.date, to = end.date, auto.assign = FALSE))
vix <- as.matrix(getSymbols("^VIX", from = start.date, to = end.date, auto.assign = FALSE))
xiv <- as.matrix(getSymbols("XIV", from = start.date, to = end.date, auto.assign = FALSE))
vxx <- as.matrix(getSymbols("VXX", from = start.date, to = end.date, auto.assign = FALSE))

all(rownames(spy) == rownames(vix))
all(rownames(vix) == rownames(xiv))
all(rownames(xiv) == rownames(vxx))

spy.gains <- pchanges(spy[, 6])
vix.gains <- pchanges(vix[, 6])
xiv.gains <- pchanges(xiv[, 6])
vxx.gains <- pchanges(vxx[, 6])

# Look at predictive value of contango for holding periods of 1, 5, 10, 25, 50, and 100 days (recent period)
dat.subset <- subset(dat, Date > as.Date("2016-03-18"))
dat.list <- list()
index <- 0
windows <- c(1, 5, 10, 25, 50, 100)
for (window in windows) {

  index <- index + 1

  dat.mat <- matrix(NA, nrow = nrow(dat.subset) - window, ncol = 13)

  for (ii in 1: (nrow(dat.subset) - window)) {

    dat.mat[ii, 1] <- dat.subset$c.spotm1[ii]
    dat.mat[ii, 2] <- dat.subset$c.spotm1.p[ii]
    dat.mat[ii, 3] <- dat.subset$c.spotm2[ii]
    dat.mat[ii, 4] <- dat.subset$c.spotm2.p[ii]
    dat.mat[ii, 5] <- dat.subset$c.m1m2[ii]
    dat.mat[ii, 6] <- dat.subset$c.m1m2.p[ii]
    dat.mat[ii, 7] <- dat.subset$c.w.spotw[ii]
    dat.mat[ii, 8] <- dat.subset$c.w.spotw.p[ii]
    dat.mat[ii, 9] <- gains.rate(gains = spy.gains[ii: (ii + window - 1)]) * 100
    dat.mat[ii, 10] <- gains.rate(gains = vix.gains[ii: (ii + window - 1)]) * 100
    dat.mat[ii, 11] <- gains.rate(gains = xiv.gains[ii: (ii + window - 1)]) * 100
    dat.mat[ii, 12] <- gains.rate(gains = vxx.gains[ii: (ii + window - 1)]) * 100
    dat.mat[ii, 13] <- vix[ii, 6]

    dat.list[[index]] <- dat.mat
  }


}

# Fit model for 10-day XIV growth vs. SPY change over the period and baseline contango
datx <- dat.list[[4]]
summary(lm(datx[, 11] ~ datx[, 9] + datx[, 10] + datx[, 6]))
