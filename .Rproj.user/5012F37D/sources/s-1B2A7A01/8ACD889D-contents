---
title: "Summary Tables with 'tab' Package"
author: "Dane Van Domelen"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
bibliography: bibliography.bib
nocite: | 
  @survival-package, 
  @survival-book,
  @printr
#csl: american-medical-association-alphabetical.csl
vignette: >
  %\VignetteIndexEntry{Summary Tables with 'tab' Package}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)

# Load packages
library("xtable")

# Set xtable options
options("xtable.caption.placement" = "top", 
        "xtable.include.rownames" = FALSE, 
        "xtable.comment" = FALSE)
```

## 'tab' Package

The purpose of **tab** is to make it easier to create tables for papers, including Table 1's showing characteristics of the sample and summary tables for fitted regression models. Currently, the following functions are included:

* `tabmeans` compares means in two or more groups.
* `tabmedians` compares medians in two or more groups.
* `tabfreq` compares frequencies in two or more groups. 
* `tabmulti` compares multiple variables in two or more groups.
* `tabglm` summarizes a generalized linear model (GLM) fit via `glm`. 
* `tabgee` summarizes a generalized estimating equation (GEE) fit via `gee`. 
* `tabcox` summarizes a Cox Proportional Hazards (Cox PH) model fit via `coxph` in **survival**. 


## 'tabdata' Dataset

A toy dataset called `tabdata` is included in the **tab package**. It is a data frame with 15 variables and 300 observations. Let's take a look:

```{r chunk1, message = FALSE}
library("printr")
library("tab")
data(tabdata)
dim(tabdata)
head(tabdata)
```

First of all, `head(tabdata)` produced a nice looking table showing the first 6 observations of `tabdata`, rather than the usual output you see in the Console. That's because I loaded **printr**, a package that formats R output nicely for documents created by **knitr**. 
Looks nice right? That's just because I loaded **printr**, a package that makes R output get printed more neatly. Usually, `head(tabdata)` would display the first few observations in the usual R output style.

Anyway, `tabdata` has 15 variables and 300 observations, and it does contain some missing values.

## Table 1

Here's how you can use the `tabmulti` function to create a Table 1 summarizing characteristics of the treatment group and control group.

```{r chunk2}
(table1 <- tabmulti(data = tabdata, xvarname = "Group", 
                    yvarnames = c("Age", "Sex", "Race"), 
                    format.latex = TRUE))
```






```{r test1, eval = TRUE, results = "asis"}
library("tab")
library("knitr")
#library("pander")
#library("printr")

data(tabdata)
tabdata <- tabdata[complete.cases(tabdata), ]
glmfit1 <- glm(BMI ~ Age + Sex + Race + Group, data = tabdata)
lintable <- tabglm(fit = glmfit1, columns = c("beta.se", "p"), 
                   format.latex = TRUE)
#t1 <- xtable(lintable)
#print(t1, sanitize.text.function = identity, type = "html")

pander::pandoc.table(lintable, justify = 'lrr', style = "multiline")
pander::pandoc.table(lintable, justify = 'lrr', style = "grid")
pander::pandoc.table(lintable, justify = 'lrr', style = "simple")
pander::pandoc.table(lintable, justify = 'lrr', style = "rmarkdown")

```


## Figures

The figure sizes have been customised so that you can easily put two images side-by-side. 

```{r, fig.show='hold'}
plot(1:10)
plot(10:1)
```

You can enable figure captions by `fig_caption: yes` in YAML:

    output:
      rmarkdown::html_vignette:
        fig_caption: yes

Then you can use the chunk option `fig.cap = "Your figure caption."` in **knitr**.

## More Examples

You can write math expressions, e.g. $Y = X\beta + \epsilon$, footnotes^[A footnote here.], and tables, e.g. using `knitr::kable()`.

```{r, echo=FALSE, eval = FALSE, results='asis'}
knitr::kable(head(mtcars, 10))
```

Also a quote using `>`:

> "He who gives up [code] safety for [code] speed deserves neither."
([via](https://twitter.com/hadleywickham/status/504368538874703872))


## References
