% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tabgee.R
\name{tabgee}
\alias{tabgee}
\title{Generate Summary Table for Fitted Generalized Estimating Equation (GEE) Model}
\usage{
tabgee(fit, columns = NULL, robust = TRUE, xlabels = NULL,
  compress.factors = is.null(data), omit.refgroups = compress.factors,
  data = NULL, sep.char = ", ", latex = FALSE, decimals = 2,
  p.decimals = c(2, 3), p.cuts = 0.01, p.lowerbound = 0.001,
  p.leading0 = TRUE, p.avoid1 = FALSE, variable.colname = "Variable",
  print.html = FALSE, html.filename = "table1.html")
}
\arguments{
\item{fit}{Object returned from \code{\link[gee]{gee}}.}

\item{columns}{Character vector specifying what columns to include. Choices
for each element are \code{"n"}, \code{"events"} (for binary outcomes)
\code{"beta"}, \code{"se"}, \code{"beta.se"}, \code{"beta.betaci"},
\code{"betaci"}, \code{"or"}, \code{"or.orci"}, \code{"orci"}, \code{"z"},
and \code{"p"}.}

\item{robust}{Logical value for whether 'robust' standard errors should be
used for inference.}

\item{xlabels}{Character vector with labels for the \code{x} variables and
their levels. Often useful to leave as \code{NULL} first, see how the table
looks, and then re-run with labels where they need to be.}

\item{compress.factors}{Logical value for whether to display factor variables
in compressed format, with variable names omitted and levels not indented.
Can also be "binary" to compress binary factor variables only.}

\item{omit.refgroups}{Logical value for whether to omit reference groups
for factor variables. Can also be "binary" to omit reference groups for
binary factor variables only.


as one row for each of the non-reference group levels, as opposed to one row
for the variable name and one row for each of the levels including the
reference group.}

\item{data}{Data frame containing variables passed to \code{\link[gee]{gee}}
to create \code{fit}. Only needs to be specified when one or more of the
predictors is a factor variable and \code{compres.factors = FALSE}.}

\item{sep.char}{Character string with separator to place between lower and
upper bound of confidence intervals. Typically \code{"-"} or \code{", "}.}

\item{latex}{Logical value for whether to format table so it is
ready for printing in LaTeX via \code{\link[xtable]{xtable}} or
\code{\link[knitr]{kable}}.}

\item{decimals}{Numeric value specifying number of decimal places for numbers
other than p-values.}

\item{p.decimals}{Numeric value specifying number of decimal places for
p-values. Can be a vector if you want the number of decimals to depend on
what range the p-value is in. See \code{p.cuts}.}

\item{p.cuts}{Numeric value or vector of cutpoints to control number of
decimal places for p-values. For example, by default \code{p.cuts = 0.1} and
\code{p.decimals = c(2, 3)}, meaning p-values in the range [0.1, 1] are
printed to 2 decimal places while p-values in the range [0, 0.1) are printed
to 3.}

\item{p.lowerbound}{Numeric value specifying cutpoint beneath which p-values
appear as <p.lowerbound.}

\item{p.leading0}{Logical value for whether p-values should appear with
leading 0's before the decimal point.}

\item{p.avoid1}{Logical value for whether p-values that round to 1 should
appear as \code{>0.99} (or similarly depending on \code{p.decimals} and
\code{p.cuts}) rather than 1.}

\item{variable.colname}{Character string with desired heading for first
column of table, in case you prefer something other than \code{"Variable"}.}

\item{print.html}{Logical value for whether to write a .html file with the
table to the current working directory.}

\item{html.filename}{Character string specifying the name of the .html file
that gets written if \code{print.html = TRUE}.}
}
\value{
Character matrix with table summarizing the fitted GEE.
}
\description{
Creates table summarizing a GEE model fit using the \code{\link[gee]{gee}}
function [1].
}
\details{
Interaction and polynomial terms are compatible with \code{tabgee}. If
interaction terms are included, the table will be formatted a little
differently. Basically including an interaction is equivalent to setting
\code{basic.form = TRUE}. All variable names and levels will be exactly as
they appear when you run \code{summary(fit)}, where \code{fit} is the
object returned from a call to \code{\link[gee]{gee}}.
}
\section{Note}{

If you want to paste your tables into Microsoft Word, you can use either of
these approaches:

\enumerate{

\item Use the \emph{write.cb} function in \strong{Kmisc} [2].
If your table is stored in a character matrix named \code{table1}, use
\code{write.cb(table1)} to copy the table to your clipboard. Paste the result
into your document, then highlight the text and go to
\code{Insert -> Table -> Convert Text to Table... OK}.

\item Set \code{print.html = TRUE}. This will result in a .html file
being written to your current working directory. When you open this file, you
will see a (hopefully) nice-looking table that you can copy and paste into
your document. You can control the name of this file with
\code{html.filename}.
}

If you want to use LaTeX, R Markdown, knitr, Sweave, etc., set
\code{latex = TRUE}. Then, you can pass the returned object to
\code{\link[xtable]{xtable}} or \code{\link[knitr]{kable}} for printing. For
\code{\link[xtable]{xtable}}, you may have to set
\code{sanitize.text.function = identity} when printing.
}

\examples{
# Load in sample dataset and convert to long format
data(tabdata)
tabdata2 <- reshape(data = tabdata,
                    varying = c("bp.1", "bp.2", "bp.3", "highbp.1",
                                "highbp.2", "highbp.3"),
                    timevar = "bp.visit", direction = "long")
tabdata2 <- tabdata2[order(tabdata2$id), ]

# GEE: Blood pressure at 1, 2, and 3 months vs. predictors
geefit1 <- gee(bp ~ Age + Sex + Race + BMI + Group, id = id, data = tabdata2,
               corstr = "unstructured")
(geetable1 <- tabgee(fit = geefit1, data = tabdata2))

# GEE: High blood pressure at 1, 2, and 3 months vs. predictors. Display
# factors in "compressed" format
geefit2 <- gee(highbp ~ Age + Sex + Race + BMI + Group, id = id,
               data = tabdata2, family = binomial, corstr = "unstructured")
(geetable2 <- tabgee(fit = geefit2, data = tabdata2,
                     compress.factors = TRUE))


}
\references{
1. Carey, V.J. (2015). gee: Generalized Estimation Equation Solver. R package
version 4.13-19. Ported to R by Thomas Lumley and Brian Ripley.
\url{https://cran.r-project.org/package=gee}.

2. Dahl, D.B. (2016). xtable: Export Tables to LaTeX or HTML. R package
version 1.8-2, \url{https://cran.r-project.org/package=xtable}.

3. Ushley, K. (2013). Kmisc: Kevin Miscellaneous. R package version 0.5.0.
\url{https://CRAN.R-project.org/package=Kmisc}.
}
