% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regtable.R
\name{regtable}
\alias{regtable}
\title{Create Regression Table from Betas and Standard Errors}
\usage{
regtable(betas, ses, varcov = NULL, columns = c("variable", "beta.se",
  "p"), sep.char = ", ", decimals = NULL, p.decimals = c(2, 3),
  p.cuts = 0.01, p.lowerbound = 0.001, p.leading0 = TRUE,
  p.avoid1 = FALSE, labels = NULL)
}
\arguments{
\item{betas}{Numeric vector.}

\item{ses}{Numeric vector.}

\item{varcov}{Numeric matrix.}

\item{columns}{Character vector specifying what columns to include. Choices
are \code{"variable"}, \code{"beta"}, \code{"se"}, \code{"betaci"},
\code{"beta.se"}, \code{"beta.ci"}, \code{"or"}, \code{"orci"},
\code{"or.ci"}, and \code{"p"}.}

\item{sep.char}{Character string with separator to place between lower and
upper bound of confidence intervals. Typically \code{"-"} or \code{", "}.}

\item{decimals}{Numeric value specifying number of decimal places for numbers
other than p-values.}

\item{p.decimals}{Numeric value specifying number of decimal places for
p-values. Can be a vector if you want the number of decimals to depend on
what range the p-value is in. See \code{p.cuts}.}

\item{p.cuts}{Numeric value or vector of cutpoints to control number of
decimal places for p-values. For example, by default \code{p.cuts = 0.1} and
\code{p.decimals = c(2, 3)}, meaning p-values in the range [0.1, 1] are
printed to 2 decimal places while p-values in the range [0, 0.1) are printed
to 3.}

\item{p.lowerbound}{Numeric value specifying cutpoint beneath which p-values
appear as <p.lowerbound.}

\item{p.leading0}{Logical value for whether p-values should appear with
leading 0's before the decimal point.}

\item{p.avoid1}{Logical value for whether p-values that round to 1 should
appear as \code{>0.99} (or similarly depending on \code{p.decimals} and
\code{p.cuts}) rather than 1.}

\item{labels}{Character vector.}
}
\value{
Data frame.
}
\description{
Useful for quickly creating a summary table.
}
\examples{
# Create summary table for mtcars regression
fit <- lm(mpg ~ wt + hp + drat, data = mtcars)
regtable(betas = fit$coef, varcov = vcov(fit),
         labels = c("Intercept", "Weight", "HP", "Rear axle ratio"))


}
