% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tabfreq.R
\name{tabfreq}
\alias{tabfreq}
\title{Generate Frequency Table}
\usage{
tabfreq(x = NULL, y, columns = c("xgroups", "p"), cell = "counts",
  parenth = "col.percent", sep.char = ", ", test = "chi.fisher",
  xlevels = NULL, yname = NULL, ylevels = NULL, compress.binary = FALSE,
  yname.row = !compress.binary, text.label = NULL, quantiles = NULL,
  quantile.vals = FALSE, format.latex = FALSE, decimals = 1,
  p.decimals = c(2, 3), p.cuts = 0.01, p.lowerbound = 0.001,
  p.leading0 = TRUE, p.avoid1 = FALSE, n.headings = FALSE,
  bold.colnames = TRUE, variable.colname = "Variable", print.html = FALSE,
  html.filename = "table1.html")
}
\arguments{
\item{x}{Vector indicating group membership for columns of I-by-J table.}

\item{y}{Vector indicating group membership for rows of I-by-J table.}

\item{columns}{Character vector specifying what columns to include. Choices
for each element are \code{"n"} for total sample size, \code{"overall"} for
overall distribution of \code{y}, \code{"xgroups"} for distributions of
\code{y} for each \code{x} group, \code{"test"} for test statistic, and
\code{"p"} for p-value.}

\item{cell}{Character string specifying what statistic to display in cells.
Choices are \code{"counts"}, \code{"tot.percent"}, \code{"col.percent"},
and \code{"row.percent"}.}

\item{parenth}{Character string specifying what statistic to display in
parentheses. Choices are \code{"none"}, \code{"se"}, \code{"ci"},
\code{"counts"}, \code{"tot.percent"}, \code{"col.percent"}, and
\code{"row.percent"}.}

\item{sep.char}{Character string with separator to place between lower and
upper bound of confidence intervals. Typically \code{"-"} or \code{", "}.}

\item{test}{Character string specifying which test for association between
\code{x} and \code{y} should be used. Choices are \code{"chi.fisher"} for
Pearson's chi-squared test if its assumptions are met, otherwise Fisher's
exact test; \code{"chi"}; \code{"fisher"}; \code{"z"} for z test without
continuity correction; and \code{"z.continuity"} for z test with continuity
correction. The last two only work if both \code{x} and \code{y} are binary.}

\item{xlevels}{Character vector with labels for the levels of \code{x}, used
in column headings.}

\item{yname}{Character string with a label for the \code{y} variable.}

\item{ylevels}{Character vector with labels for the levels of \code{y}. Note
that levels of \code{y} are listed in the order that they appear when you run
\code{table(y, x)}.}

\item{compress.binary}{Logical value for whether to compress binary \code{y}
variable to a single row, excluding the first level rather than showing both.}

\item{yname.row}{Logical value for whether to include a row displaying the
name of the \code{y} variable.}

\item{text.label}{Character string with text to put after the \code{y}
variable name, identifying what cell values and parentheses represent.}

\item{quantiles}{Numeric value. If specified, table compares \code{y} across
quantiles of \code{x} created on the fly.}

\item{quantile.vals}{Logical value for whether labels for \code{x} quantiles
should show quantile number and corresponding range, e.g. Q1 [0.00, 0.25),
rather than just the quantile number.}

\item{format.latex}{Logical value for whether to format table so it is
ready to be passed to \code{\link[xtable]{xtable}} for printing in LaTeX.}

\item{decimals}{Numeric value specifying number of decimal places for numbers
other than p-values.}

\item{p.decimals}{Numeric value specifying number of decimal places for
p-values. Can be a vector if you want the number of decimals to depend on
what range the p-value is in. See \code{p.cuts}.}

\item{p.cuts}{Numeric value or vector of cutpoints to control number of
decimal places for p-values. For example, by default \code{p.cuts = 0.1} and
\code{p.decimals = c(2, 3)}, meaning p-values in the range [0.1, 1] are
printed to 2 decimal places while p-values in the range [0, 0.1) are printed
to 3.}

\item{p.lowerbound}{Numeric value specifying cutpoint beneath which p-values
appear as <p.lowerbound.}

\item{p.leading0}{Logical value for whether p-values should appear with
leading 0's before the decimal point.}

\item{p.avoid1}{Logical value for whether p-values that round to 1 should
appear as \code{>0.99} (or similarly depending on \code{p.decimals} and
\code{p.cuts}) rather than 1.}

\item{n.headings}{Logical value for whether to display group sample sizes in
parentheses in column headings.}

\item{bold.colnames}{Logical value for whether to use bold font for column
headings. Only used if \code{xtable = TRUE}.}

\item{variable.colname}{Character string with desired heading for first
column of table, in case you prefer something other than \code{"Variable"}.}

\item{print.html}{Logical value for whether to write a .html file with the
table to the current working directory.}

\item{html.filename}{Character string specifying the name of the .html file
that gets written if \code{print.html = TRUE}.}
}
\value{
Character matrix comparing the distribution of \code{y} across levels
of \code{x}.
}
\description{
Creates I-by-J frequency table comparing the distribution of \code{y} across
levels of \code{x}.
}
\section{Note}{

If you want to paste your tables into Microsoft Word, you can use either of
these approaches:

\enumerate{

\item Use the \code{\link[Kmisc]{write.cb}} function in \pkg{Kmisc} [2].
If your table is stored in a character matrix named \code{table1}, use
\code{write.cb(table1)} to copy the table to your clipboard. Paste the result
into your document, then highlight the text and go to
\code{Insert -> Table -> Convert Text to Table... OK}.

\item Set \code{print.html = TRUE}. This will result in a .html file
being written to your current working directory. When you open this file, you
will see a (hopefully) nice-looking table that you can copy and paste into
your document. You can control the name of this file with
\code{html.filename}.
}

If you want to use LaTeX, R Markdown, knitr, Sweave, etc., set
\code{format.latex = TRUE}. You may have to set
\code{sanitize.text.function = identity} when calling
\code{\link[xtable]{print.xtable}}.
}

\examples{
# Load in sample dataset d and drop rows with missing values
data(d)
d <- d[complete.cases(d), ]

# Compare sex distribution by group, with group as column variable
(freqtable1 <- tabfreq(x = d$Group, y = d$Sex))

# Same comparison, but compress table to show male row only and show percent
# (SE) rather than n (percent)
(freqtable2 <- tabfreq(x = d$Group, y = d$Sex, compress.binary = TRUE,
                       cell = "col.percent", parenth = "se"))

# Use rbind to create single table comparing sex and race in control vs.
# treatment group
(freqtable3 <- rbind(tabfreq(x = d$Group, y = d$Sex),
                     tabfreq(x = d$Group, y = d$Race)))

# An easier way to make this table is to use tabmulti
(freqtable4 <- tabmulti(data = d, xvarname = "Group",
                        yvarnames = c("Sex", "Race")))


}
\references{
1. Dahl, D.B. (2016). xtable: Export Tables to LaTeX or HTML. R package
version 1.8-2, \url{https://cran.r-project.org/package=xtable}.

2. Ushley, K. (2013). Kmisc: Kevin Miscellaneous. R package version 0.5.0.
\url{https://CRAN.R-project.org/package=Kmisc}.
}
