% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tabglm.R
\name{tabglm}
\alias{tabglm}
\title{Generate Summary Table for Fitted Generalized Linear Model (GLM)}
\usage{
tabglm(glmfit, columns = NULL, xlabels = NULL, compress.factors = FALSE,
  ci.sep = ", ", xtable = FALSE, decimals = 2, p.decimals = c(2, 3),
  p.cuts = 0.01, p.lowerbound = 0.001, p.leading0 = TRUE,
  p.avoid1 = FALSE, greek.beta = FALSE, bold.colnames = TRUE,
  variable.colname = "Variable", print.html = FALSE,
  html.filename = "table1.html")
}
\arguments{
\item{glmfit}{Object returned from \code{\link[stats]{glm}}.}

\item{columns}{Character vector specifying what columns to include. Choices
for each element are \code{"beta"}, \code{"se"}, \code{"beta.se"},
\code{"beta.betaci"}, \code{"betaci"}, \code{"or"}, \code{"or.orci"},
\code{"orci"}, \code{"test"} (for z/t test statistic), and \code{"p"}.}

\item{xlabels}{Character vector with labels for the \code{x} variables and
their levels. Often useful to leave as \code{NULL} first, see how the table
looks, and then re-run with labels where they need to be.}

\item{compress.factors}{Logical value for whether to display factor variables should
as one row for each of the non-reference group levels, as opposed to one row
for the variable name and one row for each of the levels including the
reference group.}

\item{ci.sep}{Character string with separator to place between lower and
upper bound of confidence intervals. Typically \code{"-"} or \code{", "}.}

\item{xtable}{Logical value for whether to format table to give to
\code{\link[xtable]{xtable}} for printing in LaTeX.}

\item{decimals}{Numeric value specifying number of decimal places for numbers
other than p-values.}

\item{p.decimals}{Numeric value specifying number of decimal places for
p-values. Can be a vector if you want the number of decimals to depend on
what range the p-value is in. See \code{p.cuts}.}

\item{p.cuts}{Numeric value or vector of cutpoints to control number of
decimal places for p-values. For example, by default \code{p.cuts = 0.1} and
\code{p.decimals = c(2, 3)}, meaning p-values in the range [0.1, 1] are
printed to 2 decimal places while p-values in the range [0, 0.1) are printed
to 3.}

\item{p.lowerbound}{Numeric value specifying cutpoint beneath which p-values
appear as <p.lowerbound.}

\item{p.leading0}{Logical value for whether p-values should appear with
leading 0's before the decimal point.}

\item{p.avoid1}{Logical value for whether p-values that round to 1 should
appear as \code{>0.99} (or similarly depending on \code{p.decimals} and
\code{p.cuts}) rather than 1.}

\item{greek.beta}{Logical value for whether to display the Greek letter beta
rather than "Beta". Only used if \code{latex = TRUE}.}

\item{bold.colnames}{Logical value for whether to use bold font for column
headings. Only used if \code{xtable = TRUE}.}

\item{variable.colname}{Character string with desired heading for first
column of table, in case you prefer something other than \code{"Variable"}.}

\item{print.html}{Logical value for whether to write a .html file with the
table to the current working directory.}

\item{html.filename}{Character string specifying the name of the .html file
that gets written if \code{print.html = TRUE}.}
}
\value{
Character matrix summarizing the fitted GLM.
}
\description{
Creates table summarizing a GLM fit using the \code{\link[stats]{glm}}
function.
}
\section{Note}{

If you want to paste your tables into Microsoft Word, you can use either of
these approaches:

\enumerate{

\item 1. Use the \code{\link[Kmisc]{write.cb}} function in \pkg{Kmisc} [2].
If your table is stored in a character matrix named \code{table1}, use
\code{write.cb(table1)} to copy the table to your clipboard. Paste the result
into your document, then highlight the text and go to
\code{Insert -> Table -> Convert Text to Table... OK}.

\item 2. Set \code{print.html = TRUE}. This will result in a .html file
being written to your current working directory. When you open this file, you
will see a (hopefully) nice-looking table that you can copy and paste into
your document. You can control the name of this file with
\code{html.filename}.
}

If you want to use LaTeX, R Markdown, knitr, Sweave, etc., set
\code{xtable = TRUE}. You may have to set
\code{sanitize.text.function = identity} when calling
\code{\link[xtable]{print.xtable}}.
}

\examples{
# Load in sample dataset d and drop rows with missing values
data(d)
d <- d[complete.cases(d), ]

# Linear regression: BMI vs. age, sex, race, and treatment
glmfit1 <- glm(BMI ~ Age + Sex + Race + Group, data = d)
(lintable <- tabglm(glmfit = glmfit))

# Logistic regression: 1-year mortality vs. age, sex, race, and treatment.
# Also, use "compressed" format for factors
glmfit2 <- glm(death_1yr ~ Age + Sex + Race + Group, data = d,
               family = binomial)
(logtable1 <- tabglm(glmfit = glmfit2, compress.factors = TRUE))

# Logistic regression with higher-order terms
glmfit3 <- glm(death_1yr ~ poly(Age, 2, raw = TRUE) + Sex + BMI + Sex * BMI,
               data = d, family = "binomial")
(logtable2 <- tabglm(glmfit = glmfit3))


}
\references{
1. Dahl, D.B. (2016). xtable: Export Tables to LaTeX or HTML. R package
version 1.8-2, \url{https://cran.r-project.org/package=xtable}.

2. Ushley, K. (2013). Kmisc: Kevin Miscellaneous. R package version 0.5.0.
\url{https://CRAN.R-project.org/package=Kmisc}.
}
